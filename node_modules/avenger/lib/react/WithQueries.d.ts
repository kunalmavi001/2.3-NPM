import * as React from 'react';
import { Semigroup } from 'fp-ts/lib/Semigroup';
import { QueryResult } from '../QueryResult';
import { EnforceNonEmptyRecord, ObservableQueries, ProductL, ProductP, ProductA } from '../util';
declare type Params<A> = A extends void ? {} : {
    params: A;
};
declare type Props<R extends ObservableQueries> = {
    queries: EnforceNonEmptyRecord<R>;
    render: (result: QueryResult<ProductL<R>, ProductP<R>>) => React.ReactNode;
    resultSemigroup?: Semigroup<QueryResult<ProductL<R>, ProductP<R>>>;
} & Params<ProductA<R>>;
export declare function WithQueries<P extends ObservableQueries>(props: Props<P>): JSX.Element;
export {};
