import { CacheValue } from './CacheValue';
import * as QR from './QueryResult';
import { Observable } from 'rxjs/internal/Observable';
import { ObservableQuery } from './Query';
import * as Eq from 'fp-ts/lib/Eq';
export declare function cacheValueToQueryResult<L, P>(cacheValue: CacheValue<L, P>): QR.QueryResult<L, P>;
export declare function observe<A, L, P>(query: ObservableQuery<A, L, P>, input: A, resultEq: Eq.Eq<QR.QueryResult<L, P>>): Observable<QR.QueryResult<L, P>>;
export declare function observeStrict<A, L, P>(query: ObservableQuery<A, L, P>, input: A): Observable<QR.QueryResult<L, P>>;
export declare function observeShallow<A, L, P>(query: ObservableQuery<A, L, P>, input: A): Observable<QR.QueryResult<L, P>>;
